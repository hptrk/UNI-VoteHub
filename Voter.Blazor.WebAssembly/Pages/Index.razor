@page "/home"
@using Microsoft.AspNetCore.Components.Authorization
@using Voter.Shared.Models
@using Voter.Blazor.WebAssembly.Services
@inject IPollService PollService

<PageTitle>Admin Dashboard - VoteHub</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Welcome to the VoteHub Admin Dashboard</h1>
        
        <div class="row mt-4">
            <div class="col-md-4 mb-3">
                <div class="card bg-primary text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Active Polls</h5>
                        <p class="card-text">Manage currently active polls</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a href="/polls/active" class="btn btn-outline-light">View Active Polls</a>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4 mb-3">
                <div class="card bg-secondary text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Closed Polls</h5>
                        <p class="card-text">Review completed polls and their results</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a href="/polls/closed" class="btn btn-outline-light">View Closed Polls</a>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4 mb-3">
                <div class="card bg-success text-white h-100">
                    <div class="card-body">
                        <h5 class="card-title">Create New Poll</h5>
                        <p class="card-text">Create a new anonymous poll</p>
                    </div>
                    <div class="card-footer bg-transparent border-top-0">
                        <a href="/polls/create" class="btn btn-outline-light">Create Poll</a>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mt-5">
            <h3>My Polls</h3>
            
            @if (loading)
            {
                <div class="d-flex justify-content-center mt-4">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (error != null)
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @error
                </div>
            }
            else if (userPolls == null || !userPolls.Any())
            {
                <div class="alert alert-info mt-3" role="alert">
                    You haven't created any polls yet. <a href="/polls/create" class="alert-link">Create a new poll</a>?
                </div>
            }
            else
            {
                <div class="table-responsive mt-3">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Question</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var poll in userPolls.Take(5))
                            {
                                var now = DateTime.UtcNow;
                                string status = "Upcoming";
                                string statusClass = "text-secondary";
                                
                                if (poll.StartDate <= now && poll.EndDate >= now)
                                {
                                    status = "Active";
                                    statusClass = "text-success";
                                }
                                else if (poll.EndDate < now)
                                {
                                    status = "Closed";
                                    statusClass = "text-danger";
                                }
                                
                                <tr>
                                    <td>@poll.Question</td>
                                    <td><span class="@statusClass">@status</span></td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="@($"/polls/{poll.Id}")" class="btn btn-sm btn-primary">
                                                <i class="bi bi-eye"></i> View
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    
                    @if (userPolls.Count > 5)
                    {
                        <div class="text-center mt-3">
                            <a href="/polls/my-polls" class="btn btn-outline-primary">View All My Polls</a>
                        </div>
                    }
                </div>
            }
            </div>
    </Authorized>    
    <NotAuthorized>
        <div class="text-center">
            <h1 class="display-4 mb-4">Welcome to VoteHub Admin</h1>
            <p class="lead mb-4">Please login to access the admin dashboard.</p>
            <a href="login" class="btn btn-primary btn-lg">Login</a>        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<PollDTO>? userPolls;
    private bool loading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserPolls();
    }

    private async Task LoadUserPolls()
    {
        try
        {
            loading = true;
            userPolls = await PollService.GetUserPollsAsync();
        }
        catch (Exception ex)
        {
            error = $"Error loading polls: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }
}
