@page "/polls/my-polls"
@using Voter.Shared.Models
@using Voter.Blazor.WebAssembly.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IPollService PollService
@inject NavigationManager NavigationManager

<PageTitle>My Polls - VoteHub</PageTitle>

<h3>My Polls</h3>

@if (loading)
{
    <div class="d-flex justify-content-center mt-4">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (error != null)
{
    <div class="alert alert-danger mt-3" role="alert">
        @error
    </div>
}
else if (polls == null || !polls.Any())
{
    <div class="alert alert-info mt-3" role="alert">
        You haven't created any polls yet. <a href="/polls/create" class="alert-link">Create a new poll</a>?
    </div>
}
else
{
    <div class="table-responsive mt-3">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Question</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var poll in polls)
                {
                    var now = DateTime.UtcNow;
                    string status = "Upcoming";
                    string statusClass = "text-secondary";
                    
                    if (poll.StartDate <= now && poll.EndDate >= now)
                    {
                        status = "Active";
                        statusClass = "text-success";
                    }
                    else if (poll.EndDate < now)
                    {
                        status = "Closed";
                        statusClass = "text-danger";
                    }
                    
                    <tr>
                        <td>@poll.Question</td>
                        <td>@poll.StartDate.ToShortDateString()</td>
                        <td>@poll.EndDate.ToShortDateString()</td>
                        <td><span class="@statusClass">@status</span></td>
                        <td>
                            <div class="btn-group" role="group">
                                <a href="@($"/polls/{poll.Id}")" class="btn btn-sm btn-primary">
                                    <i class="bi bi-eye"></i> View
                                </a>
                                <a href="@($"/polls/{poll.Id}/results")" class="btn btn-sm btn-info">
                                    <i class="bi bi-bar-chart"></i> Results
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<PollDTO>? polls;
    private bool loading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        await LoadPolls();
    }

    private async Task LoadPolls()
    {
        try
        {
            loading = true;
            polls = await PollService.GetUserPollsAsync();
        }
        catch (Exception ex)
        {
            error = $"Error loading polls: {ex.Message}";
        }
        finally
        {
            loading = false;
        }
    }
}
